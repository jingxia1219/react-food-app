{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react-food-app/code/react-food-app-1/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './components/Header';\nimport React, { useState, useReducer } from 'react';\nimport Meals from './components/Meals/Meals';\nimport Cart from './components/Cart/Cart'; // import CartProvider from './store/CartProvider'\n\nimport CartContext from './store/cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nfunction cartReducer(state, _ref) {\n  let {\n    type,\n    payload\n  } = _ref;\n\n  if (type === 'ADD') {\n    const updatedItems = state.items.concat(payload);\n    console.log('state,', state);\n    console.log(payload);\n    const updatedTotalAmount = (+state.totalAmount + payload.price * payload.amount).toFixed(2);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n}\n\nfunction App() {\n  _s();\n\n  const [cartItems, setCartItems] = useState([]);\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const [modalStatus, setModalStatus] = useState(false);\n\n  function openModalHandler() {\n    setModalStatus(true);\n  }\n\n  function closeModalHandler() {\n    setModalStatus(false);\n  }\n\n  console.log(cartItems);\n  const CartContextValue = {\n    items: cartItems,\n    totalAmount: +cartState.totalAmount,\n    addItem: item => setCartItems(cartItems => {\n      return [...cartItems, item];\n    }),\n    removeItem: id => dispatchCartAction({\n      type: 'REMOVE',\n      payload: id\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContextValue,\n    children: [console.log(CartContextValue), modalStatus && /*#__PURE__*/_jsxDEV(Cart, {\n      closeModal: closeModalHandler,\n      modalStatus: modalStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Z+1RSsdoUAKL8Gl2In/Y41bkaBY=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react-food-app/code/react-food-app-1/src/App.js"],"names":["Header","React","useState","useReducer","Meals","Cart","CartContext","defaultCartState","items","totalAmount","cartReducer","state","type","payload","updatedItems","concat","console","log","updatedTotalAmount","price","amount","toFixed","App","cartItems","setCartItems","cartState","dispatchCartAction","modalStatus","setModalStatus","openModalHandler","closeModalHandler","CartContextValue","addItem","item","removeItem","id"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,UAAxB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,gBAAgB,GAAC;AACrBC,EAAAA,KAAK,EAAC,EADe;AAErBC,EAAAA,WAAW,EAAC;AAFS,CAAvB;;AAIA,SAASC,WAAT,CAAqBC,KAArB,QAA2C;AAAA,MAAhB;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,GAAgB;;AACzC,MAAID,IAAI,KAAK,KAAb,EAAoB;AAClB,UAAME,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBF,OAAnB,CAArB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBN,KAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAZ;AACA,UAAMK,kBAAkB,GAAG,CAAC,CAACP,KAAK,CAACF,WAAP,GAAqBI,OAAO,CAACM,KAAR,GAAcN,OAAO,CAACO,MAA5C,EAAoDC,OAApD,CAA4D,CAA5D,CAA3B;AACA,WAAO;AACLb,MAAAA,KAAK,EAAEM,YADF;AAELL,MAAAA,WAAW,EAAES;AAFR,KAAP;AAID;AACF;;AAED,SAASI,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACuB,SAAD,EAAYC,kBAAZ,IAAkCvB,UAAU,CAACO,WAAD,EAAcH,gBAAd,CAAlD;AACA,QAAM,CAACoB,WAAD,EAAcC,cAAd,IAA+B1B,QAAQ,CAAC,KAAD,CAA7C;;AACA,WAAS2B,gBAAT,GAA4B;AAC1BD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AACD,WAASE,iBAAT,GAA6B;AAC3BF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AACFZ,EAAAA,OAAO,CAACC,GAAR,CAAYM,SAAZ;AACC,QAAMQ,gBAAgB,GAAG;AACvBvB,IAAAA,KAAK,EAACe,SADiB;AAEvBd,IAAAA,WAAW,EAAE,CAACgB,SAAS,CAAChB,WAFD;AAGvBuB,IAAAA,OAAO,EAAEC,IAAD,IAAUT,YAAY,CAAED,SAAD,IAAa;AAAE,aAAO,CAAC,GAAGA,SAAJ,EAAcU,IAAd,CAAP;AAA2B,KAA3C,CAHP;AAIvBC,IAAAA,UAAU,EAAGC,EAAD,IAAQT,kBAAkB,CAAC;AAACd,MAAAA,IAAI,EAAC,QAAN;AAAgBC,MAAAA,OAAO,EAAEsB;AAAzB,KAAD;AAJf,GAAzB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEJ,gBAA7B;AAAA,eACGf,OAAO,CAACC,GAAR,CAAYc,gBAAZ,CADH,EAEGJ,WAAW,iBAAI,QAAC,IAAD;AAAM,MAAA,UAAU,EAAIG,iBAApB;AAAuC,MAAA,WAAW,EAAEH;AAApD;AAAA;AAAA;AAAA;AAAA,YAFlB,eAGE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEE;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA1BQP,G;;KAAAA,G;AA4BT,eAAeA,GAAf","sourcesContent":["import Header from './components/Header'\nimport React,{useState, useReducer} from 'react';\nimport Meals from './components/Meals/Meals'\nimport Cart from './components/Cart/Cart'\n// import CartProvider from './store/CartProvider'\nimport CartContext from './store/cart-context';\n\nconst defaultCartState={\n  items:[],\n  totalAmount:0\n};\nfunction cartReducer(state,{type,payload}) {\n  if (type === 'ADD') {\n    const updatedItems = state.items.concat(payload);\n    console.log('state,',state)\n    console.log(payload)\n    const updatedTotalAmount = (+state.totalAmount + payload.price*payload.amount).toFixed(2)\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    }\n  }\n}\n\nfunction App() {\n  const [cartItems, setCartItems]=useState([])\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\n  const [modalStatus, setModalStatus] =useState(false)\n  function openModalHandler() {\n    setModalStatus(true)\n  }\n  function closeModalHandler() {\n    setModalStatus(false)\n  }\n console.log(cartItems)\n  const CartContextValue = {\n    items:cartItems,\n    totalAmount: +cartState.totalAmount,\n    addItem:(item) => setCartItems((cartItems)=>{ return [...cartItems,item]}),\n    removeItem: (id) => dispatchCartAction({type:'REMOVE', payload: id})\n\n  }\n  return (\n    <CartContext.Provider value={CartContextValue}>\n      {console.log(CartContextValue)}\n      {modalStatus && <Cart closeModal = {closeModalHandler} modalStatus={modalStatus}/>}\n      <Header openModal={openModalHandler}/>\n      <Meals/>\n      </CartContext.Provider>\n  );\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}