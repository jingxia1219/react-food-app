{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react-food-app/code/react-food-app-1/src/App.js\",\n    _s = $RefreshSig$();\n\n// function cartReducer(state,{type,payload}) {\n//   if (type === 'ADD') {\n//     const updatedItems = state.items.concat(payload);\n//     console.log('state,',state)\n//     console.log(payload)\n//     const updatedTotalAmount = (+state.totalAmount + payload.price*payload.amount).toFixed(2)\n//     return {\n//       items: updatedItems,\n//       totalAmount: updatedTotalAmount\n//     }\n//   }\n// }\n// const defaultCartState={\n//   items:[],\n//   totalAmount:0\n// };\n// const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\nimport Header from './components/Header';\nimport React, { useState, useReducer } from 'react';\nimport Meals from './components/Meals/Meals';\nimport Cart from './components/Cart/Cart';\nimport CartContext from './store/cart-context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [totalAmountState, setTotalAmountState] = useState(0);\n  const [cartItems, setCartItems] = useState([]);\n  const [modalStatus, setModalStatus] = useState(false);\n\n  function addItemHandler(item) {\n    setCartItems(cartItems => {\n      return [...cartItems, item];\n    });\n    console.log('cartIems in App.js:', cartItems);\n    setTotalAmountState(totalAmount => {\n      return totalAmount + item.price * item.amount;\n    });\n  }\n\n  function removeItemHandler(id) {}\n\n  function openModalHandler() {\n    setModalStatus(true);\n  }\n\n  function closeModalHandler() {\n    setModalStatus(false);\n  } //  console.log(cartItems)\n\n\n  const CartContextValue = {\n    items: cartItems,\n    totalAmount: +totalAmountState.toFixed(2),\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContextValue,\n    children: [console.log(CartContextValue), modalStatus && /*#__PURE__*/_jsxDEV(Cart, {\n      closeModal: closeModalHandler,\n      modalStatus: modalStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ySl51/2rjv/nj4VFYhaYnBgy/kM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react-food-app/code/react-food-app-1/src/App.js"],"names":["Header","React","useState","useReducer","Meals","Cart","CartContext","App","totalAmountState","setTotalAmountState","cartItems","setCartItems","modalStatus","setModalStatus","addItemHandler","item","console","log","totalAmount","price","amount","removeItemHandler","id","openModalHandler","closeModalHandler","CartContextValue","items","toFixed","addItem","removeItem"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,UAAxB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;;AAGA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,gBAAD,EAAkBC,mBAAlB,IAAyCP,QAAQ,CAAC,CAAD,CAAvD;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,WAAD,EAAcC,cAAd,IAA+BX,QAAQ,CAAC,KAAD,CAA7C;;AAEA,WAASY,cAAT,CAAwBC,IAAxB,EAA6B;AAC3BJ,IAAAA,YAAY,CAAED,SAAD,IAAa;AAAE,aAAO,CAAC,GAAGA,SAAJ,EAAcK,IAAd,CAAP;AAA2B,KAA3C,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,SAAnC;AACAD,IAAAA,mBAAmB,CAAES,WAAD,IAAe;AACjC,aAAQA,WAAW,GAACH,IAAI,CAACI,KAAL,GAAWJ,IAAI,CAACK,MAApC;AACD,KAFkB,CAAnB;AAGD;;AACD,WAASC,iBAAT,CAA2BC,EAA3B,EAA+B,CAAE;;AAEjC,WAASC,gBAAT,GAA4B;AAC1BV,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD;;AACD,WAASW,iBAAT,GAA6B;AAC3BX,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD,GAnBY,CAoBf;;;AACE,QAAMY,gBAAgB,GAAG;AACvBC,IAAAA,KAAK,EAAChB,SADiB;AAEvBQ,IAAAA,WAAW,EAAE,CAACV,gBAAgB,CAACmB,OAAjB,CAAyB,CAAzB,CAFS;AAGvBC,IAAAA,OAAO,EAACd,cAHe;AAIvBe,IAAAA,UAAU,EAAER;AAJW,GAAzB;AAMA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEI,gBAA7B;AAAA,eACGT,OAAO,CAACC,GAAR,CAAYQ,gBAAZ,CADH,EAEGb,WAAW,iBAAI,QAAC,IAAD;AAAM,MAAA,UAAU,EAAIY,iBAApB;AAAuC,MAAA,WAAW,EAAEZ;AAApD;AAAA;AAAA;AAAA;AAAA,YAFlB,eAGE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAEW;AAAnB;AAAA;AAAA;AAAA;AAAA,YAHF,eAIE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GAnCQhB,G;;KAAAA,G;AAqCT,eAAeA,GAAf","sourcesContent":["// function cartReducer(state,{type,payload}) {\n//   if (type === 'ADD') {\n//     const updatedItems = state.items.concat(payload);\n//     console.log('state,',state)\n//     console.log(payload)\n//     const updatedTotalAmount = (+state.totalAmount + payload.price*payload.amount).toFixed(2)\n//     return {\n//       items: updatedItems,\n//       totalAmount: updatedTotalAmount\n//     }\n//   }\n// }\n// const defaultCartState={\n//   items:[],\n//   totalAmount:0\n// };\n// const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\nimport Header from './components/Header'\nimport React,{useState, useReducer} from 'react';\nimport Meals from './components/Meals/Meals'\nimport Cart from './components/Cart/Cart'\nimport CartContext from './store/cart-context';\n\n\nfunction App() {\n  const [totalAmountState,setTotalAmountState] = useState(0)\n  const [cartItems, setCartItems]=useState([])\n  const [modalStatus, setModalStatus] =useState(false)\n  \n  function addItemHandler(item){\n    setCartItems((cartItems)=>{ return [...cartItems,item]});\n    console.log('cartIems in App.js:', cartItems)\n    setTotalAmountState((totalAmount)=>{\n      return (totalAmount+item.price*item.amount)\n    })\n  }\n  function removeItemHandler(id) {}\n\n  function openModalHandler() {\n    setModalStatus(true)\n  }\n  function closeModalHandler() {\n    setModalStatus(false)\n  }\n//  console.log(cartItems)\n  const CartContextValue = {\n    items:cartItems,\n    totalAmount: +totalAmountState.toFixed(2),\n    addItem:addItemHandler,\n    removeItem: removeItemHandler\n  }\n  return (\n    <CartContext.Provider value={CartContextValue}>\n      {console.log(CartContextValue)}\n      {modalStatus && <Cart closeModal = {closeModalHandler} modalStatus={modalStatus}/>}\n      <Header openModal={openModalHandler}/>\n      <Meals/>\n      </CartContext.Provider>\n  );\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}