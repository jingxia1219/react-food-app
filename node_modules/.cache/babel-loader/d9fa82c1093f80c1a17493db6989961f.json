{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/react-food-app/code/react-food-app-1/src/App.js\",\n    _s = $RefreshSig$();\n\n// function cartReducer(state,{type,payload}) {\n//   if (type === 'ADD') {\n//     const updatedItems = state.items.concat(payload);\n//     console.log('state,',state)\n//     console.log(payload)\n//     const updatedTotalAmount = (+state.totalAmount + payload.price*payload.amount).toFixed(2)\n//     return {\n//       items: updatedItems,\n//       totalAmount: updatedTotalAmount\n//     }\n//   }\n// }\n// const defaultCartState={\n//   items:[],\n//   totalAmount:0\n// };\n// const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\nimport Header from './components/Header';\nimport React, { useState } from 'react';\nimport Meals from './components/Meals/Meals';\nimport Cart from './components/Cart/Cart';\nimport CartContext from './store/cart-context'; // import MealItemForm from './components/Meals/MealItemForm';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [totalAmountState, setTotalAmountState] = useState(0);\n  const [cartItems, setCartItems] = useState([]);\n  const [modalStatus, setModalStatus] = useState(false);\n\n  function addItemHandler(item) {\n    const existingIndex = cartItems.findIndex(existingitem => item.id === existingitem.id);\n\n    if (cartItems[existingIndex]) {\n      const updatedItem = { ...item,\n        amount: item.amount + cartItems[existingIndex].amount\n      };\n      let updatedItems = cartItems;\n      updatedItems[existingIndex] = updatedItem;\n      setCartItems({ ...updatedItems\n      });\n    } else {\n      setCartItems(cartItems => {\n        return [...cartItems, item];\n      });\n    }\n\n    setTotalAmountState(totalAmount => {\n      return totalAmount + item.price * item.amount;\n    });\n  }\n\n  function removeItemHandler(id) {\n    const existingIndex = cartItems.findIndex(item => item.id === id);\n    const newAmount = cartItems[existingIndex].amount - 1;\n    let updatedItem = cartItems[existingIndex]; //updatedItem var before update\n\n    let updatedItems = cartItems;\n\n    if (newAmount > 0) {\n      updatedItem = { ...cartItems[existingIndex],\n        amount: newAmount\n      }; //to update the amount to amount - 1\n\n      updatedItems[existingIndex] = updatedItem; // new array with updated item\n\n      setCartItems(updatedItems);\n    } else {\n      //when amount is 0 \n      updatedItems = cartItems.filter(item => item.id !== id);\n      setCartItems(updatedItems);\n    }\n\n    setTotalAmountState(totalAmount => {\n      return totalAmount - updatedItem.price;\n    });\n  }\n\n  function openModalHandler() {\n    setModalStatus(true);\n  }\n\n  function closeModalHandler() {\n    setModalStatus(false);\n  }\n\n  const CartContextValue = {\n    items: cartItems,\n    totalAmount: +totalAmountState.toFixed(2),\n    addItem: addItemHandler,\n    removeItem: removeItemHandler\n  };\n  console.log(CartContextValue.items);\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: CartContextValue,\n    children: [modalStatus && /*#__PURE__*/_jsxDEV(Cart, {\n      closeModal: closeModalHandler,\n      modalStatus: modalStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      openModal: openModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Meals, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ySl51/2rjv/nj4VFYhaYnBgy/kM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/user/Desktop/react-food-app/code/react-food-app-1/src/App.js"],"names":["Header","React","useState","Meals","Cart","CartContext","App","totalAmountState","setTotalAmountState","cartItems","setCartItems","modalStatus","setModalStatus","addItemHandler","item","existingIndex","findIndex","existingitem","id","updatedItem","amount","updatedItems","totalAmount","price","removeItemHandler","newAmount","filter","openModalHandler","closeModalHandler","CartContextValue","items","toFixed","addItem","removeItem","console","log"],"mappings":"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","sourcesContent":["// function cartReducer(state,{type,payload}) {\n//   if (type === 'ADD') {\n//     const updatedItems = state.items.concat(payload);\n//     console.log('state,',state)\n//     console.log(payload)\n//     const updatedTotalAmount = (+state.totalAmount + payload.price*payload.amount).toFixed(2)\n//     return {\n//       items: updatedItems,\n//       totalAmount: updatedTotalAmount\n//     }\n//   }\n// }\n// const defaultCartState={\n//   items:[],\n//   totalAmount:0\n// };\n// const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState)\nimport Header from './components/Header'\nimport React,{useState} from 'react';\nimport Meals from './components/Meals/Meals'\nimport Cart from './components/Cart/Cart'\nimport CartContext from './store/cart-context';\n// import MealItemForm from './components/Meals/MealItemForm';\n\nfunction App() {\n  const [totalAmountState,setTotalAmountState] = useState(0)\n  const [cartItems, setCartItems]=useState([])\n  const [modalStatus, setModalStatus] =useState(false)\n  \n  function addItemHandler(item){\n    const existingIndex = cartItems.findIndex(existingitem => item.id === existingitem.id )\n    if (cartItems[existingIndex]){\n      const updatedItem = {...item, amount:(item.amount+cartItems[existingIndex].amount)}\n     let updatedItems = cartItems;\n     updatedItems[existingIndex] = updatedItem;\n     setCartItems({...updatedItems});\n    } else {\n    setCartItems((cartItems)=>{ return [...cartItems,item]})\n  }\n    setTotalAmountState((totalAmount)=>{\n      return (totalAmount+item.price*item.amount)}\n    )\n  }\n  function removeItemHandler(id) {\n    const existingIndex = cartItems.findIndex( item => item.id === id)\n    const newAmount = cartItems[existingIndex].amount - 1\n    let updatedItem = cartItems[existingIndex]; //updatedItem var before update\n    let updatedItems = cartItems\n    if (newAmount > 0) {\n         updatedItem = {...cartItems[existingIndex],amount:newAmount };//to update the amount to amount - 1\n     updatedItems[existingIndex] = updatedItem // new array with updated item\n     setCartItems(updatedItems)\n    } else { //when amount is 0 \n       updatedItems = cartItems.filter( item =>  item.id !== id )\n      setCartItems(updatedItems)\n     }\n     setTotalAmountState((totalAmount)=>{\n      return (totalAmount-updatedItem.price)}\n    )\n  }\n\n  function openModalHandler() {\n    setModalStatus(true)\n  }\n  function closeModalHandler() {\n    setModalStatus(false)\n  }\n  const CartContextValue = {\n    items:cartItems,\n    totalAmount: +totalAmountState.toFixed(2),\n    addItem:addItemHandler,\n    removeItem: removeItemHandler\n  }\n  console.log(CartContextValue.items)\n  return (\n    <CartContext.Provider value={CartContextValue}>\n      {/* {console.log(\"CartContext in App.js:\",CartContextValue)} */}\n      {modalStatus && <Cart closeModal = {closeModalHandler} modalStatus={modalStatus}/>}\n      <Header openModal={openModalHandler}/>\n      <Meals/>\n      </CartContext.Provider>\n  );\n}\n \nexport default App;\n"]},"metadata":{},"sourceType":"module"}